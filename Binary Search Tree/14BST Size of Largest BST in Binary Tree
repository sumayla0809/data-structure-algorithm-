class info {
    public:
    int maxi;
    int mini;
    int isBst;
    int size;
};
info solve(TreeNode * root , int &ans){

    if(root == NULL){
        return {INT_MIN , INT_MAX ,true , 0};
    } 

    info left = solve(root->left , ans); 
    info right = solve(root->right , ans);

        info currNode;
           currNode.size = left.size + right.size + 1; 
           currNode.maxi =  max(root->data , right.maxi) ; 
           currNode.mini =  min(root->data , left.mini) ;

           if(left.isBst && right.isBst && (root->data > left.maxi && root->data < right.mini)){
currNode.isBst = true;
           }  
           else{
             currNode.isBst = false;
           }  
           // ans updaate 
           if(currNode.isBst){
               ans = max(ans , currNode.size ); 
           }  
           return currNode;                                                            
}
int largestBST(TreeNode * root){
    // Write your code here.
    int maxSize =0;
    info temp = solve(root ,   maxSize);
    return maxSize;

}
