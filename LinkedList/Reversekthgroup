#include <iostream>
using namespace std;
class Node
{
public:
    int data;
    Node *next;
    Node(int data)
    {
        this->data = data;
        this->next = NULL;
    }
};

void printList(Node *head)
{
    Node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

Node *kreverse(Node *&head, int k)
{
    if (head == NULL)
    {
        return NULL;
    }
    // step 1 revrse first k nodes
    Node *next = NULL;
    Node *curr = head;
    Node *prev = NULL;
    int cnt = 0;
    while (curr != NULL && cnt < k)
    {  
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
        cnt++;
    }
    // step 2 recursion
    if (next != NULL)
    {
        head->next = kreverse(next, k);
    }
    // return head pf reverse liked list
    return prev;
}
int main()
{
    Node *node1 = new Node(10);
    Node *node2 = new Node(20);
    Node *node3 = new Node(30);
    Node *node4 = new Node(40);
    Node *node5 = new Node(50);
    node1->next = node2;
    node2->next = node3;
    node3->next = node4;
    node4->next = node5;
    int k = 2;
    Node *newnode = kreverse(node1, k);

    cout << " reverse liked list group of  k " << k << endl;
    printList(newnode);
    return 0;
}
