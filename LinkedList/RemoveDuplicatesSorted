#include <iostream>
using namespace std;
class Node
{
public:
    int data;
    Node *next;
    Node(int data)
    {
        this->data = data;
        this->next = NULL;
    }
};
Node *removeduplicat(Node *&head)
{

    // empty list
    if (head == NULL)
    {
        return NULL;
    }
    Node *curr = head;
    while (curr != NULL)
    {
        if ((curr->next != NULL) && curr->data == curr->next->data)
        {
            Node *next_next = curr->next->next;
            Node *nodetodelete = curr->next;
            delete (nodetodelete);
            curr->next = next_next;
        }
        else
        {
            curr = curr->next;
        }
    }
    return head;
}
// print list
void print(Node *&head)
{
    Node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

int main()
{
    // creat Nodes
    Node *node1 = new Node(10);
    Node *node2 = new Node(20);
    Node *node3 = new Node(20); 
    Node *node4 = new Node(40); 
    // linkes nodes
    node1->next = node2;
    node2->next = node3;
    node3->next = node4;
    Node *duplicat = removeduplicat(node1);
    cout << "unique linked list is " << endl;
    print(node1);
    return 0;
}
