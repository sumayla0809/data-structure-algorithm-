#include <iostream>
using namespace std;
class Node
{
public:
    int data;
    Node *next;
    Node(int data)
    {
        this->data = data;
        this->next = NULL;
    }
};
bool iscircular(Node *&head)
{
    // empty list
    if (head == NULL)
        return false;
    Node *temp = head->next;
    while (temp != NULL && temp != head)
    {
        temp = temp->next;
    }
    if (temp == head)
    {
        return true;
    }
    else
    {
        return false;
    }
}
int main()
{
    Node *node1 = new Node(10);
    Node *node2 = new Node(20);
    Node *node3 = new Node(30);
    Node *node4 = new Node(40);
    Node *node5 = new Node(50);
    node1->next = node2;
    node2->next = node3;
    node3->next = node4;
    node4->next = node5;
     node5->next = node1;
    if (iscircular(node1))
    {
        cout << " list is circular " << endl;
    }
    else
    {
        cout << " list is not  circular " << endl;
    }
    return 0;
}
