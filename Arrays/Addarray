#include <iostream>
#include <vector>

using namespace std;
vector<int> reverse(vector<int> v)
{
    int s = 0;
    int e = v.size() - 1;
    while (s <= e)
    {
        swap(v[s], v[e]);
        s++;
        e--;
    }
    return v;
}
vector<int> arraySum(vector<int> &a, int n, vector<int> &b, int m)
{
    int i = n - 1;
    int j = m - 1;
    vector<int> ans;
    int carray = 0;
    while (i >= 0 && j >= 0)
    {
        int val1 = a[i];
        int val2 = b[j];
        int sum = val1 + val2 + carray;
        carray = sum / 10;
        sum = sum % 10;
        ans.push_back(sum);
        i--;
        j--;
    }
    // first case
    while (i >= 0)
    {
        int sum = a[i] + carray;
        carray = sum / 10;
        sum = sum % 10;
        ans.push_back(sum);
        i--;
    }
    // second case
    while (j >= 0)
    {
        int sum = b[j] + carray;
        carray = sum / 10;
        sum = sum % 10;
        ans.push_back(sum);
        j--;
    }
    // third case
    while (carray != 0)
    {
        int sum = carray;
        carray = sum / 10;
        sum = sum % 10;
        ans.push_back(sum);
    }
    return reverse(ans);
}
int main()
{
    vector<int> val1 = {1, 2, 3, 4};
    int n = 4;

    vector<int> val2 = {6};
    int m = 1;
    vector<int> result = arraySum(val1, val1.size(), val2, val2.size());
    for (int i = 0; i < n; i++)
    {
        cout << result[i];
    }
    return 0;
}
