#include <iostream>
#include <stack>
using namespace std;

bool isValidParenthesis(string s)
{
    stack<char> st;
    for (int i = 0; i < s.length(); i++)
    {
        char ch = s[i];
        // if opening bracket stack push
        //  if closing bracket stack top and pop
        if (ch == '(' || ch == '{' || ch == '[')
        {
            st.push(ch);
        }
        else
        {
            // for closing bracket
            if (!st.empty())
            {
                char top = st.top();
                if ((ch == ')' && top == '(') ||
                    (ch == '}' && top == '{') ||
                    (ch == ']' && top == '['))
                {
                    st.pop();
                }
                else
                {
                    return false;
                }
            }
        }
    }
    return st.empty();
}
int main()
{
    string str = "{[()]}";
    if (isValidParenthesis(str))
    {
        cout << "Valid Parenthesis " << endl;
    }
    else
    {
        cout << "Invalid Parenthesis " << endl;
    }

    return 0;
}
