#include <iostream>
using namespace std;
class node
{
public:
    int data;
    node *left;
    node *right;
    node(int d)
    {
        this->data = d;
        this->left = NULL;
        this->right = NULL;
    }
};

int height(node *root)
{
    if (root == NULL)
    {
        return 0;
    }
    int leftheight = height(root->left);
    int rightheight = height(root->right);
    return max(leftheight, rightheight) + 1;
}
bool isbalanced(node *root)
{
    if (root == NULL)
    {
        return true;
    }
    bool left = isbalanced(root->left);
    bool right = isbalanced(root->right);
    int diff = abs(height(root->left) - height(root->right));
    if (left && right && diff <= 1)
    {
        return true;
    }
    else
    {
        return false;
    }  
}
int main()
{
    node *root = new node(1);
    root->left = new node(2);
    root->right = new node(3);
    root->left->left = new node(4);
    root->left->right = new node(5);
    cout << "tree is balanced or not ?" << isbalanced(root);
    return 0;
}
