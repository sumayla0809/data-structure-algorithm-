
#include <iostream>
using namespace std;
void merge(int *arr, int s, int e)
{
    int mid = s + (e - s) / 2;
    int len1 = mid - s + 1;
    int len2 = e - mid;
    int *first = new int[len1];
    int *second = new int[len1];
    // copy element
    int mainIndexArray = s;
    for (int i = 0; i < len1; i++)
    {
        first[i] = arr[mainIndexArray++];
    }
    mainIndexArray = mid + 1;
    for (int i = 0; i < len2; i++)
    {
        second[i] = arr[mainIndexArray++];
    }
    // merge to sorted Array
    int index1 = 0;
    int index2 = 0;
    mainIndexArray = s;
    while (index1 < len1 && index2 < len2)
    {
        if (first[index1] < second[index2])
        {
            arr[mainIndexArray++] = first[index1++];
        }
        else
        {
            arr[mainIndexArray++] = second[index2++];
        }
    }
    while (index1 < len1)
    {
        arr[mainIndexArray++] = first[index1++];
    }
    while (index2 < len2)
    {
        arr[mainIndexArray++] = second[index2++];
    }
}
void mergeShort(int arr[], int s, int e)
{
    // base case
    if (s >= e)
    {
        return;
    }
    int mid = s + (e - s) / 2;
    mergeShort(arr, s, mid);
    mergeShort(arr, mid + 1, e);
    merge(arr, s, e);
}
int main()
{
    int arr[] = {1, 2, 5, 6, 8, 9};
    int n = 6;
    mergeShort(arr, 0, n - 1);
    for (int i = 0; i < n; i++)
    {
        cout << arr[i] << " ";
        cout << endl;
    }
    return 0;
}
